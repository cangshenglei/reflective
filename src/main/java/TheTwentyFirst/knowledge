**
 * 问题1：Java的哪些类型可以有Class对象
 *
 * 所有类型都有Class对象
 * 基本数据类型
 * 类
 * 接口
 * 注解
 * 枚举
 *
 * 引入泛型后，出现了更多的类型，这些类型不能用Class表示，用扩展类型表示。
 * Class是Type接口的实现类
 * 其他都是Type的子接口
 *
 *
 */
 /**
  * 问题2：如何获取一个类型的Class对象
  *
  * 方式1：类名.class
  *   可以获取各种类型的Class对象
  *   编译的时候已经知道了类型  TestClass2.class
  *
  * 方式2：对象名.getClass()
  *   必须新创建对象，才可以拿到类对象
  *   编译的时候已经知道了类型
  *          TestClass2 tc2 = new TestClass2();
  *         Class clazz2 = tc2.getClass();
  *
  * 方式3：Class.forName()
  *    编译的时候知道了类型，可以用该方式，但是没有必要
  *    编译的时候不知道类型（反射），只能用该方式
  *    从配置文件中获取类的完整路径 字符串
  *   String  className="com.atguigu.entity.Dog";
  *   Class clazz = Class.forName(className);
  */

  /*
  （1）运行主方法所在的类，要先完成类初始化，再执行main方法
  （2）子类初始化时，发现它的父类还没有初始化的话，那么先初始化父类
  （3）第一次使用某个类型就是在new它的对象，此时这个类没有初始化的话，先完成类初始化再做实例初始化
  （4）调用某个类的静态成员（类变量和类方法），此时这个类没有初始化的话，先完成类初始化
  （5）通过反射操作某个类时，如果这个类没有初始化，也会导致该类先初始化
   */



   >>>>>>>>>>>>>>>>>>>>>反射过于复杂,因此先停步,后续再深化<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<