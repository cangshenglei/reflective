package TheEighth.knowledege.demo4;
/**
 * @ClassName StaticDemo04
 * @Description 此类用于演示功能
 * @Author Shark
 * @DateTime 2022年02月22日 09时52分
 * @Version 1.0
 *
 * 三种变量的区别:
 *      局部变量:声明在代码块中或者代码块声明上的变量
 *      实例变量:声明在类中方法外,且没有static关键字修饰的变量
 *      静态变量:声明在类中方法外,且含有static关键字修饰的变量
 *
 * 区别:
 *      代码中声明的位置不同:
 *          局部变量:代码块中或者代码块声明上
 *          实例变量:类中方法外
 *          静态变量:类中方法外
 *      内存中存储的位置不同:
 *          局部变量:栈内存
 *          实例变量:堆内存
 *          静态变量:堆内存
 *      是否含有默认值不同:
 *          局部变量:没有
 *          实例变量:含有
 *          静态变量:含有
 *      代码中变量的作用域不同:
 *          局部变量:所属方法中
 *          实例变量:所属类中(静态方法,静态常量,静态代码块,静态成员内部类中无效)
 *          静态变量:所属类中
 *      内存中变量的生命周期不同:
 *          局部变量:随着方法的调用而加载,随着方法的出栈而消失
 *          实例变量:随着对象的创建而加载,随着对象的回收而消失
 *          静态变量:随着类的加载而加载,随着类的回收而消失
 *      加载方式和次数不同:
 *          局部变量:每调用一次方法,局部变量就会加载一次,最多可以加载无数次
 *          实例变量:每创建一次对象,实例变量就会加载一次,最多可以加载无数次
 *          静态变量:考虑到类只加载唯一的一次,静态变量也只加载唯一的一次
 *
 */
public class StaticDemo04 {
    public static void main(String[] args) {
        new Var();
        new Var();
    }
}