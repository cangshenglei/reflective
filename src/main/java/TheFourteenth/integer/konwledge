包装类:
 *      含义:针对8种基本类型数据进行对应的引用类型
 *
 * 基本类型(包装类型):
 *      byte(Byte),short(Short),int(Integer),long(Long)
 *      float(Float),double(Double)
 *      char(Character)
 *      boolean(Boolean)
 *
 * 学习包装类目的:
 *      1.基本类型和包装类型之间的转换
 *      2.基本类型和字符串类型之间的转化
 *      3.笔试或面试题


 装箱和拆箱:
  *      装箱:将基本类型数据转换为包装类型数据
  *      拆箱:将包装类型数据转换为基本类型数据
  *
  * 装箱:
  *      1.以基本类型数据为参数的包装类型构造器
  *      2.包装类型的静态方法valueOf(基本类型数组)
  *      3.自动装箱
  *
  * 拆箱:
  *      1.包装类型的实例方法xxxValue()
  *      2.自动拆箱


   自动装箱和自动拆箱(JDK5.0)
   *      由JVM自动进行隐式的装箱和拆箱



   基本类型和字符串类型间的转换
    *      将基本类型数据转换为字符串类型数据:
    *          1.字符串连接符
    *          2.通过包装类型的实例方法toString()
    *          3.通过包装类型的静态方法toString()
    *          4.通过String的静态方法valueOf()(推荐)
    *      将字符串类型数据转换为基本类型数据:
    *          1.包装类型的构造器,再进行自动拆箱
    *          2.包装类型的静态方法parseXxx() (推荐)
    *
    * 注意事项:
    *      Character类并没有提供将字符串类型转换为char类型的两种方式

    包装类笔试题1:
     *      包装类型没有基本类型数据的自动提升,只有向上转型和向下转型

     包装类笔试题2:
      *      当通过自动装箱的方式创建Integer对象时,如果初始化值在-128~127之间,直接整数常量池中拿数据,如果不在其范围内,直接在堆中new
      */