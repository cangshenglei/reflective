日期时间类:
 *      第一代(JDK1.0):Date,DateFormat,SimpleDateFormat
 *      第二代(JDK1.1):Calendar
 *      第三代(JDK8.0):LocalDate,LocalTime,LocalDateTime,DateTimeFormatter
 *
 * Date类:
 *      类的位置
 *          java.util
 *      类的特点
 *          类 Date 表示特定的瞬间，精确到毫秒。
 *      类的构造器
 *          public Date()
 *              分配 Date 对象并初始化此对象，以表示分配它的时间（精确到毫秒）。
 *          public Date(long date)
 *              分配 Date 对象并初始化此对象，以表示自从标准基准时间（称为“历元（epoch）”，即 1970 年 1 月 1 日 00:00:00 GMT）以来的指定毫秒数。
 *      类的方法
 *          public long getTime()
 *              返回自 1970 年 1 月 1 日 00:00:00 GMT 以来此 Date 对象表示的毫秒数。




 DateFormat类
  *      类的位置
  *          java.text
  *      类的特点
  *          针对日期时间对象进行格式化和解析操作工具类的父类
  *              格式化:Date对象==>文本(String)
  *              解析:文本(String)==>Date对象
  *      类的构造器
  *          因为抽象类,创建其子类对象进行使用
  *      类的方法
  *          public final String format(Date date)
  *              将一个 Date 格式化为日期/时间字符串。
  *          public Date parse(String source)
  *              从给定字符串的开始解析文本，以生成一个日期
  *
  * SimpleDateFormat类
  *      类的位置:
  *          java.text
  *      类的特点:
  *          针对日期时间对象进行格式化和解析操作工具类
  *      类的构造器:
  *          public SimpleDateFormat(String pattern)
  *              用给定的模式和默认语言环境的日期格式符号构造 SimpleDateFormat。
  *      类的方法
  *          继承DateFormat类中的format(Date date)和parse(String source)



  Calendar类
   *      类的位置
   *          java.util
   *      类的特点
   *          针对日期时间操作提供的第二代工具类
   *      类的构造器
   *          该类为抽象类,通过静态方法进行获取
   *      类的方法
   *          public static Calendar getInstance()
   *              使用默认时区和语言环境获得一个日历。
   *          public int get(int field)
   *              返回给定日历字段的值

   LocalDateTime类
    *      类的位置
    *          java.time
    *      类的特点
    *          针对日期时间操作提供的第三代工具类
    *      类的构造器
    *          构造器私有化
    *      类的方法
    *          public static LocalDateTime now()
    *              从默认时区中的系统时钟中获取当前日期时间。
    *          public static LocalDateTime parse(CharSequence text,DateTimeFormatter formatter)
    *              获得 LocalDateTime实例从使用特定格式的文本字符串。



    DateTimeFormatter类
    *      类的位置
    *          java.time.format
    *      类的特点
    *          针对LocalDate,LocalTime,LocalDateTime对象进行格式化和解析操作的工具类
    *      类的构造器
    *          构造器私有化
    *      类的方法
    *          public static DateTimeFormatter ofPattern(String pattern)
    *              创建一个格式化程序使用指定的模式。
    *          public String format(TemporalAccessor temporal)
    *              使用此格式化程序格式的日期时间对象。
    *          public TemporalAccessor parse(CharSequence text)
    *              充分分析文本产生的时空对象。
    */